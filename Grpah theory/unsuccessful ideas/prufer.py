import networkx as nx
import matplotlib.pyplot as plt

n = 9

def prufer_to_tree(seq) -> nx.Graph:
  n = len(seq)
  vertices = list(range(1, n + 2 + 1))
  T = nx.Graph()
  
  degrees = {}

  for v in vertices:
    degrees[v] = 1
  for v in seq:
    degrees[v] += 1

  for seqV in seq:
    for v in vertices:
      if degrees[v] == 1:
        T.add_edge(seqV, v)
        degrees[v] -= 1
        degrees[seqV] -= 1
        break

  u = 0
  v = 0
  for ver in vertices:
    if degrees[ver] == 1:
      if u == 0:
        u = ver
      else:
        v = ver
  
  T.add_edge(u, v)

  return T

seq5 = [
  ([2,3,4],5),
  ([2,3,4],3),
  ([2,3,4],2),

  ([3,3,4],5),
  ([3,3,4],4),
  ([3,3,4],3),
  ([3,3,4],2),

  ([4,4,4],4),
  ([4,4,4],5),
]
seq6 = [
  ([2,3,4,5],6),
  ([2,3,4,5],5),
  ([2,3,4,5],4),

  ([3,3,4,5],6),
  ([3,3,4,5],5),
  ([3,3,4,5],4),
  ([3,3,4,5],3),
  ([3,3,4,5],2),

  ([4,4,4,5],6),
  ([4,4,4,5],5),
  ([4,4,4,5],4),
  ([4,4,4,5],3),

  ([5,5,5,5],6),
  ([5,5,5,5],5),

  ([4,4,5,5],6),
  ([4,4,5,5],5),

  ([2,4,4,5],6),
  ([2,4,4,5],5),
  ([2,4,4,5],4),
  ([2,4,4,5],3),
]
seq = [
  # ([2,3,4,5,6],7),
  # ([2,3,4,5,6],6),
  # ([2,3,4,5,6],5),
  # ([2,3,4,5,6],4),

  # ([3,3,4,5,6],7),
  # ([3,3,4,5,6],6),
  # ([3,3,4,5,6],5),
  # ([3,3,4,5,6],4),
  # ([3,3,4,5,6],3),
  # ([3,3,4,5,6],2),

  # ([4,4,4,5,6],7),
  # ([4,4,4,5,6],6),
  # ([4,4,4,5,6],5),
  # ([4,4,4,5,6],4),
  # ([4,4,4,5,6],3),

  # ([5,5,5,5,6],7),
  # ([5,5,5,5,6],6),
  # ([5,5,5,5,6],5),
  # ([5,5,5,5,6],4),
  
  # ([6,6,6,6,6],7),
  # ([6,6,6,6,6],6),

  # ([5,5,5,6,6],7),
  # ([5,5,5,6,6],6),
  # ([5,5,5,6,6],5),
  # ([5,5,5,6,6],3),

  # ([2,5,5,6,6],7),
  # ([2,5,5,6,6],6),
  # ([2,5,5,6,6],5),
  # ([2,5,5,6,6],3),
  # ([2,5,5,6,6],2),
  # ([2,5,5,6,6],1),

  # ([2,2,5,6,6],7),
  # ([2,2,5,6,6],6),
  # ([2,2,5,6,6],5),

  # ([3,3,4,4,6],7),
  # ([3,3,4,4,6],6),
  # ([3,3,4,4,6],5),
  # ([3,3,4,4,6],4),
  # ([3,3,4,4,6],3),
  # ([3,3,4,4,6],2),

  # ([2,4,4,5,6],7),
  # ([2,4,4,5,6],6),
  # ([2,4,4,5,6],5),
  # ([2,4,4,5,6],4),
  # ([2,4,4,5,6],3),
  # ([2,4,4,5,6],2),
  ([2,4,4,5,6],1),

  # ([2,4,4,4,6],7),
  # ([2,4,4,4,6],6),
  # ([2,4,4,4,6],5),
  # ([2,4,4,4,6],4),
]


for s, start in seq:
  colours = []
  tree = prufer_to_tree(s)
  for v in tree.nodes:
    if v == start:
      colours.append("green")
    else:
      colours.append("lightblue")
  nx.draw_networkx(tree, node_color=colours)
  plt.show()



